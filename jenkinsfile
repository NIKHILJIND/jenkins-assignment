@Library('email-lib') _

pipeline {
    agent any
    stages {
        stage('fetching') {
            steps {
                echo "fetching inputs....";
             }
        }
        stage('invoking-tool') {
            steps {
                echo "invoking-tool-exe....";
             }
        }
        stage('pre-simulation') {
            steps {
                echo "configuring tool....";
             }
        }
        stage('simulation') {
            steps {
                echo "performing-simulation-for-VECU....";
             }
        }
        stage('gathering-reports') {
            steps {
                echo "getting reports generated from simulation....";
              }
        }
        stage('validating-reports') {
            steps {
                echo "validating the test reports....";
              }
        }
        stage('uploading-reports') {
            steps {
                echo "pushing generated archifacts to remote repo....";
              }
        }
    }
    post {
        success {
                echo "Success Emailing the Results";
                script {
                    //email_results = load 'vars/emailResults.groovy'
                    //my_list = [{env.BUILD_STATUS}, {env.BUILD_ID}, "system_integrations"]
                    my_list = ["${currentBuild.currentResult}", "${BUILD_ID}", "system_integrations"]
                    //my_list = ["failed", "build-id", "system_integrations"]
                    testScript.call(my_list)
                }
        }
        failure {
                echo "failed Emailing the Results";
                script {
                    //email_results = load 'vars/emailResults.groovy'
                    //my_list = [{env.BUILD_STATUS}, {env.BUILD_ID}, "system-integrations"]
                    my_list = ["${currentBuild.currentResult}", "${BUILD_ID}", "system-integrations"]
                    //my_list = ["failed", "build-id", "system_integrations"]
                    testScript.call(my_list)
                }
        }
    }
}
